// client/src/dashboard/pages/PhatHienMatRung.jsx - FIXED VERSION
import React, { useState, useEffect, useRef } from "react";
import { useLocation } from "react-router-dom";
import { ClipLoader } from 'react-spinners';
import { FaCloudSun, FaImage, FaListAlt, FaExclamationTriangle, FaRedo, FaExternalLinkAlt } from "react-icons/fa";
import { toast } from "react-toastify";

export default function PhatHienMatRung() {
  const [loading, setLoading] = useState(true);
  const [activeTab, setActiveTab] = useState("phantich");
  const [error, setError] = useState(null);
  const [retryCount, setRetryCount] = useState(0);
  const iframeRef = useRef(null);
  const location = useLocation();
  
  // Timeout ƒë·ªÉ detect iframe loading issues
  const [loadTimeout, setLoadTimeout] = useState(null);
  
  useEffect(() => {
    // Ki·ªÉm tra tab t·ª´ URL
    const searchParams = new URLSearchParams(location.search);
    const tab = searchParams.get("tab");
    if (tab && ["phantich", "locmay", "xulyanh"].includes(tab)) {
      setActiveTab(tab);
    }
    
    // Reset states when component mounts
    setError(null);
    setRetryCount(0);
    loadIframe();
  }, [location]);

  useEffect(() => {
    loadIframe();
  }, [activeTab]);
  
  const loadIframe = () => {
    setLoading(true);
    setError(null);
    
    // Clear previous timeout
    if (loadTimeout) {
      clearTimeout(loadTimeout);
    }
    
    // Set timeout ƒë·ªÉ detect loading issues
    const timeout = setTimeout(() => {
      if (loading) {
        console.warn(`‚ö†Ô∏è Iframe loading timeout for ${activeTab}`);
        setError("TIMEOUT");
        setLoading(false);
      }
    }, 15000); // 15 seconds timeout
    
    setLoadTimeout(timeout);
  };
  
  // URLs cho c√°c tab
  const getTabConfig = () => {
    const configs = {
      phantich: {
        title: "Ph√¢n t√≠ch m·∫•t r·ª´ng",
        url: "https://ee-phathiensommatrung.projects.earthengine.app/view/phantichmatrung",
        icon: <FaListAlt />,
        description: "Ph√¢n t√≠ch v√† ph√°t hi·ªán m·∫•t r·ª´ng s·ª≠ d·ª•ng AI"
      },
      locmay: {
        title: "C√¥ng c·ª• l·ªçc m√¢y",
        url: "https://ee-phathiensommatrung.projects.earthengine.app/view/locmay",
        icon: <FaCloudSun />,
        description: "L·ªçc v√† x·ª≠ l√Ω m√¢y trong ·∫£nh v·ªá tinh"
      },
      xulyanh: {
        title: "X·ª≠ l√Ω ·∫£nh v·ªá tinh",
        url: "https://ee-phathiensommatrung.projects.earthengine.app/view/xulyanh",
        icon: <FaImage />,
        description: "C√¥ng c·ª• x·ª≠ l√Ω v√† ph√¢n t√≠ch ·∫£nh v·ªá tinh"
      }
    };
    
    return configs[activeTab] || configs.phantich;
  };
  
  // X·ª≠ l√Ω khi iframe load th√†nh c√¥ng
  const handleIframeLoad = () => {
    console.log(`‚úÖ Iframe loaded successfully for ${activeTab}`);
    setLoading(false);
    setError(null);
    
    if (loadTimeout) {
      clearTimeout(loadTimeout);
    }
    
    // Toast success message
    toast.success(`üéâ ƒê√£ t·∫£i th√†nh c√¥ng ${getTabConfig().title}`, {
      autoClose: 2000
    });
  };
  
  // X·ª≠ l√Ω khi iframe load error
  const handleIframeError = () => {
    console.error(`‚ùå Iframe failed to load for ${activeTab}`);
    setLoading(false);
    setError("LOAD_ERROR");
    
    if (loadTimeout) {
      clearTimeout(loadTimeout);
    }
    
    // Toast error message
    toast.error(`‚ùå Kh√¥ng th·ªÉ t·∫£i ${getTabConfig().title}. Vui l√≤ng th·ª≠ l·∫°i.`, {
      autoClose: 5000
    });
  };
  
  // X·ª≠ l√Ω chuy·ªÉn tab
  const handleChangeTab = (tab) => {
    if (tab === activeTab) return;
    
    console.log(`üîÑ Switching to tab: ${tab}`);
    setActiveTab(tab);
  };
  
  // Retry loading
  const handleRetry = () => {
    const newRetryCount = retryCount + 1;
    setRetryCount(newRetryCount);
    
    console.log(`üîÑ Retry attempt ${newRetryCount} for ${activeTab}`);
    
    if (newRetryCount <= 3) {
      loadIframe();
      toast.info(`üîÑ ƒêang th·ª≠ l·∫°i... (${newRetryCount}/3)`, {
        autoClose: 2000
      });
    } else {
      toast.error("‚ùå ƒê√£ th·ª≠ l·∫°i nhi·ªÅu l·∫ßn. Vui l√≤ng ki·ªÉm tra k·∫øt n·ªëi m·∫°ng.", {
        autoClose: 5000
      });
    }
  };
  
  // M·ªü trong tab m·ªõi
  const handleOpenInNewTab = () => {
    const config = getTabConfig();
    window.open(config.url, '_blank', 'noopener,noreferrer');
    toast.info(`üåê ƒê√£ m·ªü ${config.title} trong tab m·ªõi`, {
      autoClose: 3000
    });
  };
  
  const currentConfig = getTabConfig();

  return (
    <div className="w-full h-screen flex flex-col bg-gray-50">
      
      {/* Header v·ªõi tab navigation */}
      <div className="bg-white shadow-sm border-b border-gray-200 px-4 py-3">
       
        
        {/* Current tab info */}
        <div className="mt-2 flex items-center">
          <span className="mr-2">{currentConfig.icon}</span>
          <h1 className="text-lg font-semibold text-gray-800">{currentConfig.title}</h1>
          <span className="ml-2 text-sm text-gray-500">‚Ä¢ {currentConfig.description}</span>
        </div>
      </div>

      {/* Main content area */}
      <div className="relative flex-1 overflow-hidden">
        
        {/* Loading overlay */}
        {loading && !error && (
          <div className="absolute inset-0 flex items-center justify-center bg-white z-10">
            <div className="flex flex-col items-center max-w-md mx-4 text-center">
              <ClipLoader color="#027e02" size={50} />
              <p className="mt-4 text-lg text-forest-green-primary font-medium">
                ƒêang t·∫£i {currentConfig.title}...
              </p>
              <p className="mt-2 text-sm text-gray-600">
                {currentConfig.description}
              </p>
              {retryCount > 0 && (
                <p className="mt-2 text-xs text-orange-600">
                  L·∫ßn th·ª≠: {retryCount}/3
                </p>
              )}
              <div className="mt-4 text-xs text-gray-500">
                üí° N·∫øu t·∫£i l√¢u, h√£y th·ª≠ m·ªü trong tab m·ªõi ho·∫∑c ki·ªÉm tra k·∫øt n·ªëi m·∫°ng
              </div>
            </div>
          </div>
        )}
        
        {/* Error overlay */}
        {error && (
          <div className="absolute inset-0 flex items-center justify-center bg-white z-10">
            <div className="flex flex-col items-center max-w-md mx-4 text-center p-6">
              <div className="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mb-4">
                <FaExclamationTriangle className="text-2xl text-red-500" />
              </div>
              
              <h3 className="text-xl font-semibold text-gray-800 mb-2">
                Kh√¥ng th·ªÉ t·∫£i {currentConfig.title}
              </h3>
              
              <div className="text-sm text-gray-600 mb-4">
                {error === "TIMEOUT" && (
                  <div>
                    <p className="mb-2">‚è±Ô∏è Th·ªùi gian t·∫£i qu√° l√¢u</p>
                    <p>C√≥ th·ªÉ do k·∫øt n·ªëi m·∫°ng ch·∫≠m ho·∫∑c server Google Earth Engine ƒëang b·∫≠n.</p>
                  </div>
                )}
                
                {error === "LOAD_ERROR" && (
                  <div>
                    <p className="mb-2">üîó L·ªói k·∫øt n·ªëi</p>
                    <p>Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn Google Earth Engine. Ki·ªÉm tra k·∫øt n·ªëi m·∫°ng v√† th·ª≠ l·∫°i.</p>
                  </div>
                )}
              </div>
              
              <div className="flex flex-col sm:flex-row gap-2 w-full">
                <button
                  onClick={handleRetry}
                  disabled={retryCount > 3}
                  className="flex-1 flex items-center justify-center px-4 py-2 bg-orange-500 text-white rounded-md hover:bg-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
                >
                  <FaRedo className="mr-2" />
                  {retryCount > 3 ? "ƒê√£ h·∫øt l∆∞·ª£t th·ª≠" : `Th·ª≠ l·∫°i (${retryCount}/3)`}
                </button>
                
                <button
                  onClick={handleOpenInNewTab}
                  className="flex-1 flex items-center justify-center px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors"
                >
                  <FaExternalLinkAlt className="mr-2" />
                  M·ªü tab m·ªõi
                </button>
              </div>
              
              <div className="mt-4 p-3 bg-yellow-50 rounded-md text-xs text-yellow-800">
                <p className="font-medium mb-1">üí° M·∫πo kh·∫Øc ph·ª•c:</p>
                <ul className="list-disc list-inside space-y-1">
                  <li>T·∫Øt ad blocker n·∫øu c√≥</li>
                  <li>Ki·ªÉm tra k·∫øt n·ªëi m·∫°ng</li>
                  <li>Th·ª≠ m·ªü trong tab m·ªõi</li>
                  <li>Refresh to√†n b·ªô trang</li>
                </ul>
              </div>
            </div>
          </div>
        )}
        
        {/* Main iframe */}
        {!error && (
          <iframe
            ref={iframeRef}
            src={currentConfig.url}
            title={currentConfig.title}
            width="100%"
            height="100%"
            frameBorder="0"
            onLoad={handleIframeLoad}
            onError={handleIframeError}
            sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-popups-to-escape-sandbox"
            style={{ 
              border: "none",
              display: loading ? "none" : "block"
            }}
            // Security v√† compatibility attributes
            allow="geolocation; camera; microphone; encrypted-media; fullscreen"
            referrerPolicy="strict-origin-when-cross-origin"
          />
        )}
      </div>
      
      {/* Footer info */}
      <div className="bg-gray-800 text-white px-4 py-2 text-xs">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <span className="mr-2">üåç</span>
            <span>Google Earth Engine Application</span>
          </div>
          <div className="flex items-center space-x-4">
            <span>Powered by Google Earth Engine</span>
            <span>‚Ä¢</span>
            <span>L√†o Cai Forest Monitoring</span>
          </div>
        </div>
      </div>
    </div>
  );
}